name: Deploy

env:
  RUBY_VERSION: '2.7.2'
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: 12345678
  POSTGRES_DB: postgres
  SECRET_JWT_KEY: '123456'

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
jobs:
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7.2'
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.cache-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          bundle config set without 'production staging'
          bundle config path vendor/bundle
          bundle install
          git checkout Gemfile.lock
      - name: Get file changes
        id: get_file_changes
        uses: dorner/file-changes-action@v1.2.0
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          plaintext: true
      - name: Echo file changes
        run: |
          echo Changed files: ${{ steps.get_file_changes.outputs.files }}
      - name: Standard checks
        run: |
          bundle exec rails standard
  audit:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7.2'
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.cache-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          bundle config set without 'production staging'
          bundle config path vendor/bundle
          bundle install
          git checkout Gemfile.lock
      - name: Get file changes
        id: get_file_changes
        uses: dorner/file-changes-action@v1.2.0
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          plaintext: true
      - name: Echo file changes
        run: |
          echo Changed files: ${{ steps.get_file_changes.outputs.files }}
      - name: Audit
        run: |
          bundle exec brakeman --no-pager
  rspec:
    needs: audit
    name: RSpec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          gem install bundler
          bundler install
      - name: Run tests
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345678
          POSTGRES_DB: postgres
        run: |
          cp config/database.ci.yml config/database.yml
          bundle exec rails db:schema:load
          bundle exec rspec --format progress
      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
  build:
    needs: rspec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7.2'
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ env.cache-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          bundle config set without 'production staging'
          bundle config path vendor/bundle
          bundle install
          git checkout Gemfile.lock
      - name: Get file changes
        id: get_file_changes
        uses: dorner/file-changes-action@v1.2.0
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          plaintext: true
      - name: Echo file changes
        run: |
          echo Changed files: ${{ steps.get_file_changes.outputs.files }}
      - name: Heroku Deploy
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_API_EMAIL}}
